Q1. How many users are active? (count)
[
    {
        $match{
            isActive: true   
        }
    },

] 


Q2. What is the average age of all users? (group)
[
    {
        $group: {
            _id: null,
            averageAge: {
                $avg: "$age"
            }
        }
    }
]


Q3. List the top 5 common favorite fruits
[
    {
        $group: {
            _id: "$favoriteFruit",
            count: {
                $sum: 1
            }
        }
    },
    {
        $sort: {
            count: -1
        }
    },
    {
        $limit: 2
    }
]
1 for ascending
-1 for descending


Q4. Find the total nummber of males and females
[
    {
        $group: {
            _id: "$gender",
            genderCount: {
                $sum: 1
            }
        }
    }
]


Q5. Which country has the highest number of registered users -- ( drilling down object ) 
[
    {
        $group: {
            _id: "$company.location.country",
            userCount: {
                $sum: 1
            }
        }
    },
    {
        $sort: {
            userCount: -1
        }
    },
    {
        $limit: 1
    }
]


Q6. List all unique eye colors present in the collection
[
    {
        $group: {
            _id: "$eyeColor"
        }
    }
]


Q.7 What is the average number of tags per user?
- Dealing with array elements in the object
- In such cases, first we have to separate out the array values (unwind)
A.
[
    {
        $unwind: "$tags"
    },
    {
        $group: {
            _id: "$_id",
            numberOfTags: {
                $sum: 1
            }
        }
    },
    {
        $group: {
            _id: null,
            averageNumberOfTags: {
                $avg: "$numberOfTags"
            }
        }
    }
]
B.
[
    {
        $addFields: {
            numberOfTags: {
                $size: {
                    $ifNull: ["$tags", []]
                }
            }
        }
    },
    {
        $group: {
            _id: null,
            averageNumberOfTags: {
                $avg: "$numberOfTags"
            }
        }
    }
]


Q.8 How many users have "enim" as one of their tags and count them.
[
    {
        $match: {
            tags: "enim"
        }
    },
    {
        $count: "userWithEnimTag"
    }
]


Q.9 What are the names and age of users who are inactive and have "velit" as a tag ?
[
    {
        $match: {
            isActive: false,
            tags: "velit"
        }
    },
    {
        $project: {
            name: 1,
            age: 1
        }
    }
]


Q.10 How many users have a phone number starting with '+1(940)' ?
[
    {
        $match: {
            company.phone: /^\+1 \(940\)/
        }
    },
    {
        $count: "usersWithSpecialPhoneNumber"
    }
]


Q.11 Who has registered the most recently
[
    {
        $sort: {
            registered: -1
        }
    },
    {
        $limit: 5
    },
    {
        $project: {
            name: 1,
            favoriteFruit: 1,
            registered: 1
        }
    }
]


Q.12 Categorize users by their favorite fruits
[
    {
        $group: {
            _id: "$favoriteFruit",
            users: { $push: "$name" }
        }
    }
]


Q.13 How many users have 'ad' as the second tag in their list of tags ?
[
    {
        $match: {
            "tags.1": "ad" 
        }
    },
    {
        $count: "numberOfAdTagUsers"
    }
]


Q.14 Find user who have both 'enim' and 'id' as their tags.
[
    {
        $match: {
            tags: {
                $all: ["enim", "id"]
            }
        }
    }
]


Q.15 List all companies located in the USA with their corresponding user count.
[
    {
        $match: {
            "company.location.country": "USA"
        }
    },
    {
        $group: {
            _id: "$company.title",
            userCount: {
                $sum: 1
            }
        }
    }
]


Q.16 Based on author_id (local field) find Author details from foreign field
A.
[
    {
        $lookup: {
            from: "authors",
            localField: "author_id",
            foreignField: "_id",
            as: "author_details"
        }
    },
    {
        $addFields: {
            author_details: {
                $first: "$author_details"
            }
        }
    }
] 
B.
[
    {
        $lookup: {
            from: "authors",
            localField: "author_id",
            foreignField: "_id",
            as: "author_details"
        }
    },
    {
        $addFields: {
            author_details: {
                $arrayElementAt: ["$author_details", 0]
            }
        }
    }
] 


